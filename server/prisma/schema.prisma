generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Tweet{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  content String?
  likes   LikedTweet[]
  author User? @relation(fields: [authorId], references:[id])
  authorId Int?
  comments   Comment[]
}

model User {
  id       Int     @default(autoincrement()) @id
  email    String  @unique
  password String  @default("")
  name     String?
  tweets   Tweet[]
  Profile  Profile?
  likedTweet LikedTweet[]
  comments  Comment[]
  Following Following[]
}
model LikedTweet {
  id       Int     @default(autoincrement()) @id
  tweet    Tweet  
  likedAt  DateTime  @default(now())
  userId   Int? 
  User     User? @relation(fields: [userId], references:[id])
  
}
model Following {
  id       Int     @default(autoincrement()) @id
  name     String
  avatar   String
  followId Int
  User     User? @relation(fields: [userId], references:[id])
  userId   Int? 
   
}

model Profile {
  id  Int @id @default(autoincrement())
  createdAt   DateTime @default(now())
  bio   String?
  location  String?
  website  String?
  avatar  String?
  userId  Int? @unique
  User  User? @relation(fields: [userId], references:[id])
}

model Comment{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  content String?
  Tweet  Tweet? @relation(fields: [tweetId], references:[id])
  tweetId  Int? 
  User  User? @relation(fields: [userId], references:[id])
  userId  Int? 
  comments  Comment[] @relation("CommentToComment")
  Comment   Comment?  @relation("CommentToComment", fields: [commentId], references: [id])
  commentId Int?

}